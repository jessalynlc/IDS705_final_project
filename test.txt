import pandas as pd
import numpy as np

#
df = pd.read_csv('all_hourly_data.csv')

#
df['interval_start_local'] = pd.to_datetime(df['interval_start_local'], utc=True)


df['day_of_week']  = df['interval_start_local'].dt.dayofweek  #
df['day_of_month'] = df['interval_start_local'].dt.day       #
df['month']        = df['interval_start_local'].dt.month     #


# Lag Features
for lag in [1, 2, 3, 4, 5, 6, 7, 24, 48]:
    df[f'lmp_lag_{lag}'] = df['lmp_HB_BUSAVG'].shift(lag)

# Rolling Features
df['lmp_roll_mean_24'] = df['lmp_HB_BUSAVG'].rolling(window=24).mean()
df['lmp_roll_mean_48'] = df['lmp_HB_BUSAVG'].rolling(window=48).mean()
df['lmp_roll_mean_168'] = df['lmp_HB_BUSAVG'].rolling(window=168).mean()


#
df = df.dropna().reset_index(drop=True)



在我feature engineering之后，参照下面的代码，我想画一个correlation matrix


# Select only numerical columns from train_data
numerical_columns = train_data.select_dtypes(include=[np.number])

# Calculate the correlation matrix
correlation_matrix = numerical_columns.corr()

# Plot the correlation matrix using seaborn
plt.figure(figsize=(40, 30))
sns.heatmap(correlation_matrix, annot=True, fmt=".2f", cmap="coolwarm", cbar=True, square=True)
plt.title("Correlation Matrix of Numerical Features", fontsize=16)
plt.xticks(rotation=45, ha='right')
plt.yticks(rotation=0)
plt.show()